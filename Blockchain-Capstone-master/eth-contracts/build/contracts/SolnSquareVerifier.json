{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "setting",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "countVal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addedAddress",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "triggerer",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "triggerer",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        },
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"setting\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"countVal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addedAddress\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"triggerer\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"triggerer\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xdc8cb0e54907f637835665778d4d25dca36d5ca5c91244e7e04dc786665c6410\",\"urls\":[\"bzzr://a1baf85c99d07c157797049dfed839f99de6d44d66fb50553286132fa5be97cc\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x3a34d1612e57b62ba814d7855b52f7dc252d95d73570db783d32903274e1d30c\",\"urls\":[\"bzzr://85d7151794fffc2856e4bc6c43c47f48c2a1ce1006f20b6fe082f14cc03e3994\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/verifier.sol\":{\"keccak256\":\"0x3fb2a0f3b64387ed42b7a29fe98b2761db24da0647731a920317ade6ed322818\",\"urls\":[\"bzzr://ba3d7fb3eb04dfcee4bb7e7bad8c1075cb4ee46bfef9dcc4727f8f6a26851eab\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600b81526020017f417765736f6d65436f696e0000000000000000000000000000000000000000008152506040518060400160405280600281526020017f41430000000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003524603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160008060146101000a81548160ff021916908315150217905550620001806301ffc9a760e01b6200021c60201b60201c565b620001986380ac58cd60e01b6200021c60201b60201c565b620001b063780e9d6360e01b6200021c60201b60201c565b82600f9080519060200190620001c8929190620002be565b508160109080519060200190620001e1929190620002be565b508060119080519060200190620001fa929190620002be565b5062000213635b5e139f60e01b6200021c60201b60201c565b5050506200036d565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200025257600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200030157805160ff191683800117855562000332565b8280016001018555821562000332579182015b828111156200033157825182559160200191906001019062000314565b5b50905062000341919062000345565b5090565b6200036a91905b80821115620003665760008160009055506001016200034c565b5090565b90565b6131a7806200037d6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063bdc32be01161007c578063bdc32be0146109d8578063c87b56dd14610a5b578063ccd0ef6914610b02578063d3fc986414610b50578063e985e9c514610c4d578063f2fde38b14610cc957610158565b80634f6ccce7146107315780636352211e1461077357806370a08231146107e1578063893d20e814610839578063a22cb46514610883578063b88d4fde146108d357610158565b806318160ddd1161011557806318160ddd146103b457806323b872dd146103d257806327dc297e146104405780632f745c591461050557806338bbfa501461056757806342842e0e146106c357610158565b806301ffc9a71461015d578063081812fc146101c2578063095ea7b314610230578063150704011461027e57806316c38b3c1461030157806317d7de7c14610331575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d0d565b604051808215151515815260200191505060405180910390f35b6101ee600480360360208110156101d857600080fd5b8101908080359060200190929190505050610d75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61027c6004803603604081101561024657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610db2565b005b610286610fdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c65780820151818401526020810190506102ab565b50505050905090810190601f1680156102f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61032f6004803603602081101561031757600080fd5b81019080803515159060200190929190505050611081565b005b61033961112b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037957808201518184015260208101905061035e565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103bc6111cd565b6040518082815260200191505060405180910390f35b61043e600480360360608110156103e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111da565b005b6105036004803603604081101561045657600080fd5b81019080803590602001909291908035906020019064010000000081111561047d57600080fd5b82018360208201111561048f57600080fd5b803590602001918460018302840111640100000000831117156104b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111ff565b005b6105516004803603604081101561051b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611242565b6040518082815260200191505060405180910390f35b6106c16004803603606081101561057d57600080fd5b8101908080359060200190929190803590602001906401000000008111156105a457600080fd5b8201836020820111156105b657600080fd5b803590602001918460018302840111640100000000831117156105d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561063b57600080fd5b82018360208201111561064d57600080fd5b8035906020019184600183028401116401000000008311171561066f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112b9565b005b61072f600480360360608110156106d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112be565b005b61075d6004803603602081101561074757600080fd5b81019080803590602001909291905050506112de565b6040518082815260200191505060405180910390f35b61079f6004803603602081101561078957600080fd5b8101908080359060200190929190505050611316565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610823600480360360208110156107f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611353565b6040518082815260200191505060405180910390f35b6108416113a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108d16004803603604081101561089957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506113d1565b005b6109d6600480360360808110156108e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561095057600080fd5b82018360208201111561096257600080fd5b8035906020019184600183028401116401000000008311171561098457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061150d565b005b6109e0611535565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a20578082015181840152602081019050610a05565b50505050905090810190601f168015610a4d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a8760048036036020811015610a7157600080fd5b81019080803590602001909291905050506115d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ac7578082015181840152602081019050610aac565b50505050905090810190601f168015610af45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b4e60048036036040811015610b1857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a0565b005b610c3360048036036060811015610b6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bad57600080fd5b820183602082011115610bbf57600080fd5b80359060200191846001830284011164010000000083111715610be157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611937565b604051808215151515815260200191505060405180910390f35b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b51565b604051808215151515815260200191505060405180910390f35b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611be5565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610dbb81611316565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f20616464726573732063616e6e6f7420626520746f6b656e206f776e657281525060200191505060405180910390fd5b610e666113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610eb3575060011515610eaf610ea96113a8565b33611b51565b1515145b1515610f27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420617070726f766564000000000000000000000000000000000000000081525060200191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610f996113a8565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110775780601f1061104c57610100808354040283529160200191611077565b820191906000526020600020905b81548152906001019060200180831161105a57829003601f168201915b5050505050905090565b6110896113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561110e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131176021913960400191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b5050505050905090565b6000600880549050905090565b6111e43382611d39565b15156111ef57600080fd5b6111fa838383611dce565b505050565b61123e828260006040519080825280601f01601f1916602001820160405280156112385781602001600182028038833980820191505090505b506112b9565b5050565b600061124d83611353565b8210151561125a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156112a657fe5b9060005260206000200154905092915050565b505050565b6112d98383836040518060200160405280600081525061150d565b505050565b60006112e86111cd565b821015156112f557600080fd5b60088281548110151561130457fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061139d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611df2565b905080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561140c57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6115188484846111da565b61152484848484611e00565b151561152f57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115cd5780601f106115a2576101008083540402835291602001916115cd565b820191906000526020600020905b8154815290600101906020018083116115b057829003601f168201915b5050505050905090565b60606115e282611feb565b15156115ed57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116945780601f1061166957610100808354040283529160200191611694565b820191906000526020600020905b81548152906001019060200180831161167757829003601f168201915b50505050509050919050565b80601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160146101000a81548160ff0219169083151502179055506014601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff0219169083151502179055505050507f209e782baeeecf4956303cb3e836fdf3f7279e6729ebccf2d309c292aedd3aeb81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806014805490509050600061195860018361205d90919063ffffffff16565b905060008090505b82811015611b2d5761197061300c565b60148281548110151561197f57fe5b9060005260206000209060020201604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1615151515815250509050601560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614151515611b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536f6c7574696f6e73206d75737420626520756e69717565000000000000000081525060200191505060405180910390fd5b508080600101915050611960565b50611b398686866120a7565b50611b4481876116a0565b6001925050509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611bed6113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131176021913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600080611d4583611316565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611db457508373ffffffffffffffffffffffffffffffffffffffff16611d9c84610d75565b73ffffffffffffffffffffffffffffffffffffffff16145b80611dc55750611dc48185611b51565b5b91505092915050565b611dd98383836121e7565b611de383826124d4565b611ded8282612678565b505050565b600081600001549050919050565b6000611e218473ffffffffffffffffffffffffffffffffffffffff1661273f565b1515611e305760019050611fe3565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f0b578082015181840152602081019050611ef0565b50505050905090810190601f168015611f385780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611f5a57600080fd5b505af1158015611f6e573d6000803e3d6000fd5b505050506040513d6020811015611f8457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061209f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061278a565b905092915050565b60006120b16113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131176021913960400191505060405180910390fd5b60006121406113a8565b90508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415156121c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131386021913960400191505060405180910390fd5b6121d2858561284c565b6121db8461286d565b60019150509392505050565b8273ffffffffffffffffffffffffffffffffffffffff1661220782611316565b73ffffffffffffffffffffffffffffffffffffffff16141515612275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131596023913960400191505060405180910390fd5b600015156122988373ffffffffffffffffffffffffffffffffffffffff1661273f565b151514151561230f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f742076616c6964206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b6001151561231d8483611d39565b1515141515612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f7420617070726f76656420746f207472616e73666572000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061242d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128cc565b612474600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128ef565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061252c6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061205d90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114151561261f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561259d57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156125f757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036126719190613045565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561278157506000801b8214155b92505050919050565b60008383111582901515612839576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156127fe5780820151818401526020810190506127e3565b50505050905090810190601f16801561282b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6128568282612905565b6128608282612678565b61286981612b62565b5050565b6001151561287a82611feb565b151514151561288857600080fd5b606061289382612bae565b9050606061289f611535565b905060606128ad8284612ce8565b905080601190805190602001906128c5929190613071565b5050505050565b6128e46001826000015461205d90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b61290e81611feb565b151515612983576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b600015156129a68373ffffffffffffffffffffffffffffffffffffffff1661273f565b1515141515612a1d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f742076616c6964206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ab6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128ef565b612afd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611df2565b8273ffffffffffffffffffffffffffffffffffffffff16612b1c6113a8565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612bf6576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612ce3565b600082905060005b600082141515612c24578080600101915050600a82811515612c1c57fe5b049150612bfe565b6060816040519080825280601f01601f191660200182016040528015612c595781602001600182028038833980820191505090505b50905060006001830390505b600086141515612cdb57600a86811515612c7b57fe5b0660300160f81b828280600190039350815181101515612c9757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515612cd357fe5b049550612c65565b819450505050505b919050565b6060612d248383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612d2c565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612d885781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612e13578881815181101515612db657fe5b90602001015160f81c60f81b8383806001019450815181101515612dd657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d9f565b600090505b8751811015612e8c578781815181101515612e2f57fe5b90602001015160f81c60f81b8383806001019450815181101515612e4f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e18565b600090505b8651811015612f05578681815181101515612ea857fe5b90602001015160f81c60f81b8383806001019450815181101515612ec857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e91565b600090505b8551811015612f7e578581815181101515612f2157fe5b90602001015160f81c60f81b8383806001019450815181101515612f4157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f0a565b600090505b8451811015612ff7578481815181101515612f9a57fe5b90602001015160f81c60f81b8383806001019450815181101515612fba57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f83565b82995050505050505050505095945050505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b81548183558181111561306c5781836000526020600020918201910161306b91906130f1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106130b257805160ff19168380011785556130e0565b828001600101855582156130e0579182015b828111156130df5782518255916020019190600101906130c4565b5b5090506130ed91906130f1565b5090565b61311391905b8082111561310f5760008160009055506001016130f7565b5090565b9056fe4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e43616c6c6572206e6565647320746f20626520636f6e7472616374206f776e657246726f6d2061646472657373206d757374206265206f776e6572206f6620746f6b656ea165627a7a72305820752b9fcd2c7787fe5a93a48f9a27ceeba9cc6e5c5d62b885bd70c86fd280b448002968747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063bdc32be01161007c578063bdc32be0146109d8578063c87b56dd14610a5b578063ccd0ef6914610b02578063d3fc986414610b50578063e985e9c514610c4d578063f2fde38b14610cc957610158565b80634f6ccce7146107315780636352211e1461077357806370a08231146107e1578063893d20e814610839578063a22cb46514610883578063b88d4fde146108d357610158565b806318160ddd1161011557806318160ddd146103b457806323b872dd146103d257806327dc297e146104405780632f745c591461050557806338bbfa501461056757806342842e0e146106c357610158565b806301ffc9a71461015d578063081812fc146101c2578063095ea7b314610230578063150704011461027e57806316c38b3c1461030157806317d7de7c14610331575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d0d565b604051808215151515815260200191505060405180910390f35b6101ee600480360360208110156101d857600080fd5b8101908080359060200190929190505050610d75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61027c6004803603604081101561024657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610db2565b005b610286610fdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c65780820151818401526020810190506102ab565b50505050905090810190601f1680156102f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61032f6004803603602081101561031757600080fd5b81019080803515159060200190929190505050611081565b005b61033961112b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037957808201518184015260208101905061035e565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103bc6111cd565b6040518082815260200191505060405180910390f35b61043e600480360360608110156103e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111da565b005b6105036004803603604081101561045657600080fd5b81019080803590602001909291908035906020019064010000000081111561047d57600080fd5b82018360208201111561048f57600080fd5b803590602001918460018302840111640100000000831117156104b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111ff565b005b6105516004803603604081101561051b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611242565b6040518082815260200191505060405180910390f35b6106c16004803603606081101561057d57600080fd5b8101908080359060200190929190803590602001906401000000008111156105a457600080fd5b8201836020820111156105b657600080fd5b803590602001918460018302840111640100000000831117156105d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561063b57600080fd5b82018360208201111561064d57600080fd5b8035906020019184600183028401116401000000008311171561066f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112b9565b005b61072f600480360360608110156106d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112be565b005b61075d6004803603602081101561074757600080fd5b81019080803590602001909291905050506112de565b6040518082815260200191505060405180910390f35b61079f6004803603602081101561078957600080fd5b8101908080359060200190929190505050611316565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610823600480360360208110156107f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611353565b6040518082815260200191505060405180910390f35b6108416113a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108d16004803603604081101561089957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506113d1565b005b6109d6600480360360808110156108e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561095057600080fd5b82018360208201111561096257600080fd5b8035906020019184600183028401116401000000008311171561098457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061150d565b005b6109e0611535565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a20578082015181840152602081019050610a05565b50505050905090810190601f168015610a4d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a8760048036036020811015610a7157600080fd5b81019080803590602001909291905050506115d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ac7578082015181840152602081019050610aac565b50505050905090810190601f168015610af45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b4e60048036036040811015610b1857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116a0565b005b610c3360048036036060811015610b6657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bad57600080fd5b820183602082011115610bbf57600080fd5b80359060200191846001830284011164010000000083111715610be157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611937565b604051808215151515815260200191505060405180910390f35b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b51565b604051808215151515815260200191505060405180910390f35b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611be5565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610dbb81611316565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f20616464726573732063616e6e6f7420626520746f6b656e206f776e657281525060200191505060405180910390fd5b610e666113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610eb3575060011515610eaf610ea96113a8565b33611b51565b1515145b1515610f27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420617070726f766564000000000000000000000000000000000000000081525060200191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610f996113a8565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110775780601f1061104c57610100808354040283529160200191611077565b820191906000526020600020905b81548152906001019060200180831161105a57829003601f168201915b5050505050905090565b6110896113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561110e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131176021913960400191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111c35780601f10611198576101008083540402835291602001916111c3565b820191906000526020600020905b8154815290600101906020018083116111a657829003601f168201915b5050505050905090565b6000600880549050905090565b6111e43382611d39565b15156111ef57600080fd5b6111fa838383611dce565b505050565b61123e828260006040519080825280601f01601f1916602001820160405280156112385781602001600182028038833980820191505090505b506112b9565b5050565b600061124d83611353565b8210151561125a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156112a657fe5b9060005260206000200154905092915050565b505050565b6112d98383836040518060200160405280600081525061150d565b505050565b60006112e86111cd565b821015156112f557600080fd5b60088281548110151561130457fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061139d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611df2565b905080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561140c57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6115188484846111da565b61152484848484611e00565b151561152f57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115cd5780601f106115a2576101008083540402835291602001916115cd565b820191906000526020600020905b8154815290600101906020018083116115b057829003601f168201915b5050505050905090565b60606115e282611feb565b15156115ed57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116945780601f1061166957610100808354040283529160200191611694565b820191906000526020600020905b81548152906001019060200180831161167757829003601f168201915b50505050509050919050565b80601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160146101000a81548160ff0219169083151502179055506014601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff0219169083151502179055505050507f209e782baeeecf4956303cb3e836fdf3f7279e6729ebccf2d309c292aedd3aeb81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806014805490509050600061195860018361205d90919063ffffffff16565b905060008090505b82811015611b2d5761197061300c565b60148281548110151561197f57fe5b9060005260206000209060020201604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1615151515815250509050601560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614151515611b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536f6c7574696f6e73206d75737420626520756e69717565000000000000000081525060200191505060405180910390fd5b508080600101915050611960565b50611b398686866120a7565b50611b4481876116a0565b6001925050509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611bed6113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131176021913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600080611d4583611316565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611db457508373ffffffffffffffffffffffffffffffffffffffff16611d9c84610d75565b73ffffffffffffffffffffffffffffffffffffffff16145b80611dc55750611dc48185611b51565b5b91505092915050565b611dd98383836121e7565b611de383826124d4565b611ded8282612678565b505050565b600081600001549050919050565b6000611e218473ffffffffffffffffffffffffffffffffffffffff1661273f565b1515611e305760019050611fe3565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f0b578082015181840152602081019050611ef0565b50505050905090810190601f168015611f385780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611f5a57600080fd5b505af1158015611f6e573d6000803e3d6000fd5b505050506040513d6020811015611f8457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061209f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061278a565b905092915050565b60006120b16113a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131176021913960400191505060405180910390fd5b60006121406113a8565b90508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415156121c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131386021913960400191505060405180910390fd5b6121d2858561284c565b6121db8461286d565b60019150509392505050565b8273ffffffffffffffffffffffffffffffffffffffff1661220782611316565b73ffffffffffffffffffffffffffffffffffffffff16141515612275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131596023913960400191505060405180910390fd5b600015156122988373ffffffffffffffffffffffffffffffffffffffff1661273f565b151514151561230f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f742076616c6964206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b6001151561231d8483611d39565b1515141515612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f7420617070726f76656420746f207472616e73666572000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061242d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128cc565b612474600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128ef565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061252c6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061205d90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114151561261f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561259d57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156125f757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036126719190613045565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561278157506000801b8214155b92505050919050565b60008383111582901515612839576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156127fe5780820151818401526020810190506127e3565b50505050905090810190601f16801561282b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6128568282612905565b6128608282612678565b61286981612b62565b5050565b6001151561287a82611feb565b151514151561288857600080fd5b606061289382612bae565b9050606061289f611535565b905060606128ad8284612ce8565b905080601190805190602001906128c5929190613071565b5050505050565b6128e46001826000015461205d90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b61290e81611feb565b151515612983576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b600015156129a68373ffffffffffffffffffffffffffffffffffffffff1661273f565b1515141515612a1d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f742076616c6964206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ab6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128ef565b612afd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611df2565b8273ffffffffffffffffffffffffffffffffffffffff16612b1c6113a8565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612bf6576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612ce3565b600082905060005b600082141515612c24578080600101915050600a82811515612c1c57fe5b049150612bfe565b6060816040519080825280601f01601f191660200182016040528015612c595781602001600182028038833980820191505090505b50905060006001830390505b600086141515612cdb57600a86811515612c7b57fe5b0660300160f81b828280600190039350815181101515612c9757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515612cd357fe5b049550612c65565b819450505050505b919050565b6060612d248383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612d2c565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612d885781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612e13578881815181101515612db657fe5b90602001015160f81c60f81b8383806001019450815181101515612dd657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d9f565b600090505b8751811015612e8c578781815181101515612e2f57fe5b90602001015160f81c60f81b8383806001019450815181101515612e4f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e18565b600090505b8651811015612f05578681815181101515612ea857fe5b90602001015160f81c60f81b8383806001019450815181101515612ec857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e91565b600090505b8551811015612f7e578581815181101515612f2157fe5b90602001015160f81c60f81b8383806001019450815181101515612f4157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f0a565b600090505b8451811015612ff7578481815181101515612f9a57fe5b90602001015160f81c60f81b8383806001019450815181101515612fba57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f83565b82995050505050505050505095945050505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b81548183558181111561306c5781836000526020600020918201910161306b91906130f1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106130b257805160ff19168380011785556130e0565b828001600101855582156130e0579182015b828111156130df5782518255916020019190600101906130c4565b5b5090506130ed91906130f1565b5090565b61311391905b8082111561310f5760008160009055506001016130f7565b5090565b9056fe4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e43616c6c6572206e6565647320746f20626520636f6e7472616374206f776e657246726f6d2061646472657373206d757374206265206f776e6572206f6620746f6b656ea165627a7a72305820752b9fcd2c7787fe5a93a48f9a27ceeba9cc6e5c5d62b885bd70c86fd280b4480029",
  "sourceMap": "271:1139:3:-;;;17999:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:10;611:6;;:19;;;;;;;;;;;;;;;;;;645:28;666:6;;;;;;;;;;;645:28;;;;;;;;;;;;;;;;;;;;;;1072:5;1062:7;;:15;;;;;;;;;;;;;;;;;;1945:40;1542:10;1964:20;;1945:18;;;:40;;:::i;:::-;4093;3967:10;4112:20;;4093:18;;;:40;;:::i;:::-;10814:51;10420:10;10833:31;;10814:18;;;:51;;:::i;:::-;18148:4;18140:5;:12;;;;;;;;;;;;:::i;:::-;;18172:6;18162:7;:16;;;;;;;;;;;;:::i;:::-;;18204:12;18188:13;:28;;;;;;;;;;;;:::i;:::-;;18226:49;17810:10;18245:29;;18226:18;;;:49;;:::i;:::-;17999:283;;;271:1139:3;;2295:158:0;2385:10;2370:25;;:11;:25;;;;;2362:34;;;;;;;;2442:4;2406:20;:33;2427:11;2406:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2295:158;:::o;271:1139:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "271:1139:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:1139:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2083:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4947:116;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4947:116:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4606:335;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4606:335:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18458:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18458:84:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1385:84:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;18369:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18369:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11579:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6040:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6040:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;11245:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11245:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;6226:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6226:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12010:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12010:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4425:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4425:108:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4146:273;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4146:273:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;442:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5355:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5355:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6364:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6364:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6364:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6364:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6364:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6364:211:0;;;;;;;;;;;;;;;:::i;:::-;;18551:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18551:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18657:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18657:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;18657:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:277:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;613:277:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;896:512;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;896:512:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;896:512:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;896:512:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;896:512:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;896:512:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5889:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5889:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;819:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;819:139:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2083:133;2153:4;2176:20;:33;2197:11;2176:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2169:40;;2083:133;;;:::o;4947:116::-;5006:7;5032:15;:24;5048:7;5032:24;;;;;;;;;;;;;;;;;;;;;5025:31;;4947:116;;;:::o;4606:335::-;4683:16;4691:7;4683;:16::i;:::-;4677:22;;:2;:22;;;;4669:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4768:10;:8;:10::i;:::-;4754:24;;:10;:24;;;:76;;;;4826:4;4782:48;;:40;4799:10;:8;:10::i;:::-;4811;4782:16;:40::i;:::-;:48;;;4754:76;4746:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4884:2;4857:15;:24;4873:7;4857:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4926:7;4922:2;4901:33;;4910:10;:8;:10::i;:::-;4901:33;;;;;;;;;;;;4606:335;;:::o;18458:84::-;18496:13;18528:7;18521:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18458:84;:::o;1385:::-;743:10;:8;:10::i;:::-;729:24;;:10;:24;;;721:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:7;1445;;:17;;;;;;;;;;;;;;;;;;1385:84;:::o;18369:80::-;18405:13;18437:5;18430:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18369:80;:::o;11579:94::-;11623:7;11649:10;:17;;;;11642:24;;11579:94;:::o;6040:180::-;6130:39;6149:10;6161:7;6130:18;:39::i;:::-;6122:48;;;;;;;;6181:32;6195:4;6201:2;6205:7;6181:13;:32::i;:::-;6040:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;11245:182:0:-;11325:7;11360:16;11370:5;11360:9;:16::i;:::-;11352:5;:24;11344:33;;;;;;;;11394:12;:19;11407:5;11394:19;;;;;;;;;;;;;;;11414:5;11394:26;;;;;;;;;;;;;;;;;;11387:33;;11245:182;;;;:::o;14929:166:2:-;;;;:::o;6226:132:0:-;6312:39;6329:4;6335:2;6339:7;6312:39;;;;;;;;;;;;:16;:39::i;:::-;6226:132;;;:::o;12010:148::-;12068:7;12103:13;:11;:13::i;:::-;12095:5;:21;12087:30;;;;;;;;12134:10;12145:5;12134:17;;;;;;;;;;;;;;;;;;12127:24;;12010:148;;;:::o;4425:108::-;4480:7;4506:11;:20;4518:7;4506:20;;;;;;;;;;;;;;;;;;;;;4499:27;;4425:108;;;:::o;4146:273::-;4201:16;4229;4248:34;:17;:24;4266:5;4248:24;;;;;;;;;;;;;;;:32;:34::i;:::-;4229:53;;4299:8;4292:15;;;4146:273;;;:::o;442:79::-;482:7;508:6;;;;;;;;;;;501:13;;442:79;:::o;5355:213::-;5440:10;5434:16;;:2;:16;;;;5426:25;;;;;;;;5498:8;5461:18;:30;5480:10;5461:30;;;;;;;;;;;;;;;:34;5492:2;5461:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;5548:2;5521:40;;5536:10;5521:40;;;5552:8;5521:40;;;;;;;;;;;;;;;;;;;;;;5355:213;;:::o;6364:211::-;6470:31;6483:4;6489:2;6493:7;6470:12;:31::i;:::-;6519:48;6542:4;6548:2;6552:7;6561:5;6519:22;:48::i;:::-;6511:57;;;;;;;;6364:211;;;;:::o;18551:99::-;18598:13;18630;18623:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18551:99;:::o;18657:151::-;18715:13;18748:16;18756:7;18748;:16::i;:::-;18740:25;;;;;;;;18782:10;:19;18793:7;18782:19;;;;;;;;;;;18775:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18657:151;;;:::o;613:277:3:-;714:4;680:9;:15;690:4;680:15;;;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;752:5;728:9;:15;738:4;728:15;;;;;;;;;;;;;;;:21;;:29;;;;792:4;767:9;:15;777:4;767:15;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;806:12;824:9;:15;834:4;824:15;;;;;;;;;;;;;;;806:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;806:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:19;878:4;864:19;;;;;;;;;;;;;;;;;;;;;;613:277;;:::o;896:512::-;980:4;996:14;1013:12;:19;;;;996:36;;1042:16;1061:13;1072:1;1061:6;:10;;:13;;;;:::i;:::-;1042:32;;1089:9;1101:1;1089:13;;1085:211;1108:6;1104:1;:10;1085:211;;;1135:23;;:::i;:::-;1161:12;1174:1;1161:15;;;;;;;;;;;;;;;;;;;;1135:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:9;:15;1235:4;1225:15;;;;;;;;;;;;;;;:31;;;;;;;;;;;;1198:58;;:7;:23;;;:58;;;;1190:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:211;1116:3;;;;;;;1085:211;;;;1307:35;1318:4;1324:7;1333:8;1307:10;:35::i;:::-;;1352:27;1364:8;1374:4;1352:11;:27::i;:::-;1397:4;1390:11;;;;896:512;;;;;:::o;5889:145:0:-;5969:4;5992:18;:25;6011:5;5992:25;;;;;;;;;;;;;;;:35;6018:8;5992:35;;;;;;;;;;;;;;;;;;;;;;;;;5985:42;;5889:145;;;;:::o;819:139::-;743:10;:8;:10::i;:::-;729:24;;:10;:24;;;721:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:8;891:6;;:17;;;;;;;;;;;;;;;;;;923:28;944:6;;;;;;;;;;;923:28;;;;;;;;;;;;;;;;;;;;;;819:139;:::o;7281:246::-;7366:4;7382:13;7398:16;7406:7;7398;:16::i;:::-;7382:32;;7443:5;7432:16;;:7;:16;;;:51;;;;7476:7;7452:31;;:20;7464:7;7452:11;:20::i;:::-;:31;;;7432:51;:87;;;;7487:32;7504:5;7511:7;7487:16;:32::i;:::-;7432:87;7424:96;;;7281:246;;;;:::o;12533:239::-;12618:38;12638:4;12644:2;12648:7;12618:19;:38::i;:::-;12667:47;12700:4;12706:7;12667:32;:47::i;:::-;12725:40;12753:2;12757:7;12725:27;:40::i;:::-;12533:239;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;9265:347:0:-;9386:4;9411:15;:2;:13;;;:15::i;:::-;9410:16;9406:58;;;9449:4;9442:11;;;;9406:58;9474:13;9506:2;9490:36;;;9527:10;9539:4;9545:7;9554:5;9490:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9490:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9490:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9490:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9490:70:0;;;;;;;;;;;;;;;;9474:86;;3098:10;9588:16;;9578:26;;;:6;:26;;;;9570:35;;;9265:347;;;;;;;:::o;6769:152::-;6826:4;6842:13;6858:11;:20;6870:7;6858:20;;;;;;;;;;;;;;;;;;;;;6842:36;;6912:1;6895:19;;:5;:19;;;;6888:26;;;6769:152;;;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;19789:301:0:-;19882:4;743:10;:8;:10::i;:::-;729:24;;:10;:24;;;721:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19898:13;19914:10;:8;:10::i;:::-;19898:26;;19948:5;19942:11;;:2;:11;;;19934:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20002:24;20014:2;20018:7;20002:11;:24::i;:::-;20036:26;20054:7;20036:17;:26::i;:::-;20079:4;20072:11;;;19789:301;;;;;:::o;8246:491::-;8360:4;8340:24;;:16;8348:7;8340;:16::i;:::-;:24;;;8332:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8441:5;8422:24;;:15;:2;:13;;;:15::i;:::-;:24;;;8414:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8523:4;8486:41;;:33;8505:4;8511:7;8486:18;:33::i;:::-;:41;;;8478:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8597:2;8574:11;:20;8586:7;8574:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8609:35;:17;:23;8627:4;8609:23;;;;;;;;;;;;;;;:33;:35::i;:::-;8654:33;:17;:21;8672:2;8654:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8722:7;8718:2;8703:27;;8712:4;8703:27;;;;;;;;;;;;8246:491;;;:::o;14999:1128::-;15261:22;15286:32;15316:1;15286:12;:18;15299:4;15286:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;15261:57;;15328:18;15349:17;:26;15367:7;15349:26;;;;;;;;;;;;15328:47;;15493:14;15479:10;:28;;15475:323;;;15523:19;15545:12;:18;15558:4;15545:18;;;;;;;;;;;;;;;15564:14;15545:34;;;;;;;;;;;;;;;;;;15523:56;;15627:11;15594:12;:18;15607:4;15594:18;;;;;;;;;;;;;;;15613:10;15594:30;;;;;;;;;;;;;;;;;:44;;;;15743:10;15710:17;:30;15728:11;15710:30;;;;;;;;;;;:43;;;;15475:323;;15884:12;:18;15897:4;15884:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;14999:1128;;;;:::o;13845:183::-;13958:12;:16;13971:2;13958:16;;;;;;;;;;;;;;;:23;;;;13929:17;:26;13947:7;13929:26;;;;;;;;;;;:52;;;;13991:12;:16;14004:2;13991:16;;;;;;;;;;;;;;;14013:7;13991:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;13991:30:0;;;;;;;;;;;;;;;;;;;;;;13845:183;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;13027:196:0:-;13090:24;13102:2;13106:7;13090:11;:24::i;:::-;13125:40;13153:2;13157:7;13125:27;:40::i;:::-;13176;13208:7;13176:31;:40::i;:::-;13027:196;;:::o;18815:310::-;18900:4;18880:24;;:16;18888:7;18880;:16::i;:::-;:24;;;18872:33;;;;;;;;18915:25;18943:17;18952:7;18943:8;:17::i;:::-;18915:45;;18970:26;18999:17;:15;:17::i;:::-;18970:46;;19026:20;19050:36;19060:12;19074:11;19050:9;:36::i;:::-;19026:60;;19112:6;19096:13;:22;;;;;;;;;;;;:::i;:::-;;18815:310;;;;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;7684:363:0:-;7757:16;7765:7;7757;:16::i;:::-;7756:17;7748:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7835:5;7816:24;;:15;:2;:13;;;:15::i;:::-;:24;;;7808:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7904:2;7881:11;:20;7893:7;7881:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;7917:33;:17;:21;7935:2;7917:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8008:31;:17;:21;8026:2;8008:21;;;;;;;;;;;;;;;:29;:31::i;:::-;8004:2;7983:57;;7992:10;:8;:10::i;:::-;7983:57;;;;;;;;;;;;7684:363;;:::o;14223:161::-;14326:10;:17;;;;14299:15;:24;14315:7;14299:24;;;;;;;;;;;:44;;;;14353:10;14369:7;14353:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14353:24:0;;;;;;;;;;;;;;;;;;;;;;14223:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;40282:1020::-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;271:1139:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21;\n\n\nimport \"./verifier.sol\";\nimport \"./ERC721Mintable.sol\";\nimport '../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol';\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\ncontract SolnSquareVerifier is CustomERC721Token {\n\n    using SafeMath for uint256;\n\n    Verifier verifier;\n\n    struct Solution {\n        uint256 index;\n        address solutionAddress;\n        bool exists;\n    }\n\n    Solution[] solutionsArr;\n\n    mapping(address => Solution) solutions;\n\n    event SolutionAdded(address addedAddress);\n\n    function addSolution(uint256 index, address addr) public {\n        solutions[addr].solutionAddress = addr;\n        solutions[addr].index = index;\n        solutions[addr].exists = true;\n        solutionsArr.push(solutions[addr]);\n        \n        emit SolutionAdded(addr);\n    }\n\n    function mint(address addr, uint256 tokenId, string memory tokenURI) public returns(bool) {\n        uint256 length = solutionsArr.length;\n        uint256 newIndex = length.sub(1);\n\n        for(uint256 i = 0; i < length; i++) {\n            Solution memory current = solutionsArr[i];\n            require(current.solutionAddress != solutions[addr].solutionAddress, \"Solutions must be unique\");\n        }\n\n\n        super.mint(addr, tokenId, tokenURI);\n        addSolution(newIndex, addr);\n\n        return true;\n    }\n}\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\n\n\n// TODO define a solutions struct that can hold an index & an address\n\n\n// TODO define an array of the above struct\n\n\n// TODO define a mapping to store unique solutions submitted\n\n\n\n// TODO Create an event to emit when a solution is added\n\n\n\n// TODO Create a function to add the solutions to the array and emit the event\n\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "C:/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7602
      ]
    },
    "id": 7603,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7464,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:3"
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7465,
        "nodeType": "ImportDirective",
        "scope": 7603,
        "sourceUnit": 8787,
        "src": "28:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7466,
        "nodeType": "ImportDirective",
        "scope": 7603,
        "sourceUnit": 1138,
        "src": "53:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7467,
        "nodeType": "ImportDirective",
        "scope": 7603,
        "sourceUnit": 9023,
        "src": "84:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7468,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1137,
              "src": "302:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1137",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7469,
            "nodeType": "InheritanceSpecifier",
            "src": "302:17:3"
          }
        ],
        "contractDependencies": [
          118,
          962,
          1084,
          664,
          1137,
          63,
          164,
          7462
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7602,
        "linearizedBaseContracts": [
          7602,
          1137,
          1084,
          7462,
          962,
          664,
          164,
          118,
          63
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7472,
            "libraryName": {
              "contractScope": null,
              "id": 7470,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9022,
              "src": "333:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9022",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "327:27:3",
            "typeName": {
              "id": 7471,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 7474,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7602,
            "src": "360:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8786",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7473,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8786,
              "src": "360:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8786",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7481,
            "members": [
              {
                "constant": false,
                "id": 7476,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7481,
                "src": "410:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7475,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7478,
                "name": "solutionAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7481,
                "src": "433:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7477,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "433:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7480,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7481,
                "src": "466:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7479,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7602,
            "src": "384:100:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7484,
            "name": "solutionsArr",
            "nodeType": "VariableDeclaration",
            "scope": 7602,
            "src": "490:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7482,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7481,
                "src": "490:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7481_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7483,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "490:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7488,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7602,
            "src": "520:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7487,
              "keyType": {
                "id": 7485,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "528:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "520:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7486,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7481,
                "src": "539:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7481_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7492,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7490,
                  "indexed": false,
                  "name": "addedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "585:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:22:3"
            },
            "src": "565:42:3"
          },
          {
            "body": {
              "id": 7532,
              "nodeType": "Block",
              "src": "670:220:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7499,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "680:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7501,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7500,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "690:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "680:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7502,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "solutionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7478,
                      "src": "680:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7503,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7496,
                      "src": "714:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "680:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7505,
                  "nodeType": "ExpressionStatement",
                  "src": "680:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7506,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "728:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7508,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7507,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "738:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "728:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7476,
                      "src": "728:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7510,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7494,
                      "src": "752:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "728:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7512,
                  "nodeType": "ExpressionStatement",
                  "src": "728:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7513,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "767:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7515,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7514,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "777:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "767:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7480,
                      "src": "767:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "792:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "767:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7519,
                  "nodeType": "ExpressionStatement",
                  "src": "767:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7523,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "824:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7525,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7524,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "834:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "824:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7520,
                        "name": "solutionsArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "806:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "806:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7481_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7527,
                  "nodeType": "ExpressionStatement",
                  "src": "806:34:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7529,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7496,
                        "src": "878:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7528,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "864:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "864:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7531,
                  "nodeType": "EmitStatement",
                  "src": "859:24:3"
                }
              ]
            },
            "documentation": null,
            "id": 7533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7494,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7533,
                  "src": "634:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7533,
                  "src": "649:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "633:29:3"
            },
            "returnParameters": {
              "id": 7498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:3"
            },
            "scope": 7602,
            "src": "613:277:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7600,
              "nodeType": "Block",
              "src": "986:422:3",
              "statements": [
                {
                  "assignments": [
                    7545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7545,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 7600,
                      "src": "996:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7544,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "996:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7548,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7546,
                      "name": "solutionsArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7484,
                      "src": "1013:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7547,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1013:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "996:36:3"
                },
                {
                  "assignments": [
                    7550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7550,
                      "name": "newIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 7600,
                      "src": "1042:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7549,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7555,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7551,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7545,
                        "src": "1061:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8878,
                      "src": "1061:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:32:3"
                },
                {
                  "body": {
                    "id": 7583,
                    "nodeType": "Block",
                    "src": "1121:175:3",
                    "statements": [
                      {
                        "assignments": [
                          7567
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7567,
                            "name": "current",
                            "nodeType": "VariableDeclaration",
                            "scope": 7583,
                            "src": "1135:23:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7481_memory_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 7566,
                              "name": "Solution",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 7481,
                              "src": "1135:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solution_$7481_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solution"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7571,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7568,
                            "name": "solutionsArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7484,
                            "src": "1161:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                            }
                          },
                          "id": 7570,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7569,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7557,
                            "src": "1174:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1161:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7481_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1135:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 7579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7573,
                                  "name": "current",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7567,
                                  "src": "1198:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7481_memory_ptr",
                                    "typeString": "struct SolnSquareVerifier.Solution memory"
                                  }
                                },
                                "id": 7574,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "solutionAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7478,
                                "src": "1198:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7575,
                                    "name": "solutions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7488,
                                    "src": "1225:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                                      "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7577,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7576,
                                    "name": "addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7535,
                                    "src": "1235:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1225:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7481_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "id": 7578,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "solutionAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7478,
                                "src": "1225:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1198:58:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536f6c7574696f6e73206d75737420626520756e69717565",
                              "id": 7580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1258:26:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2b1070ae363df83e4b002df67975ecce210ef0f4f81da145a6f219555a8bbc3e",
                                "typeString": "literal_string \"Solutions must be unique\""
                              },
                              "value": "Solutions must be unique"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2b1070ae363df83e4b002df67975ecce210ef0f4f81da145a6f219555a8bbc3e",
                                "typeString": "literal_string \"Solutions must be unique\""
                              }
                            ],
                            "id": 7572,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9131,
                              9132
                            ],
                            "referencedDeclaration": 9132,
                            "src": "1190:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1190:95:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7582,
                        "nodeType": "ExpressionStatement",
                        "src": "1190:95:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7560,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7557,
                      "src": "1104:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 7561,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "1108:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1104:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7584,
                  "initializationExpression": {
                    "assignments": [
                      7557
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7557,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7584,
                        "src": "1089:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 7559,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1101:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1089:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 7564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1116:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 7563,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7557,
                        "src": "1116:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7565,
                    "nodeType": "ExpressionStatement",
                    "src": "1116:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1085:211:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7588,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7535,
                        "src": "1318:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7589,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7537,
                        "src": "1324:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7590,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7539,
                        "src": "1333:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9183,
                        "src": "1307:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7602",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1136,
                      "src": "1307:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 7591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7592,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7594,
                        "name": "newIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "1364:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7595,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7535,
                        "src": "1374:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7593,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7533,
                      "src": "1352:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7597,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1397:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7543,
                  "id": 7599,
                  "nodeType": "Return",
                  "src": "1390:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7535,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "910:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7537,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "924:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7539,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "941:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:55:3"
            },
            "returnParameters": {
              "id": 7543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7542,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "980:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7541,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:6:3"
            },
            "scope": 7602,
            "src": "896:512:3",
            "stateMutability": "nonpayable",
            "superFunction": 1136,
            "visibility": "public"
          }
        ],
        "scope": 7603,
        "src": "271:1139:3"
      }
    ],
    "src": "0:2081:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7602
      ]
    },
    "id": 7603,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7464,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:3"
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7465,
        "nodeType": "ImportDirective",
        "scope": 7603,
        "sourceUnit": 8787,
        "src": "28:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7466,
        "nodeType": "ImportDirective",
        "scope": 7603,
        "sourceUnit": 1138,
        "src": "53:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/samfa/Documents/BCNanodegree/project5/Blockchain-Capstone-master/Blockchain-Capstone-master/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7467,
        "nodeType": "ImportDirective",
        "scope": 7603,
        "sourceUnit": 9023,
        "src": "84:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7468,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1137,
              "src": "302:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1137",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7469,
            "nodeType": "InheritanceSpecifier",
            "src": "302:17:3"
          }
        ],
        "contractDependencies": [
          118,
          962,
          1084,
          664,
          1137,
          63,
          164,
          7462
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7602,
        "linearizedBaseContracts": [
          7602,
          1137,
          1084,
          7462,
          962,
          664,
          164,
          118,
          63
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7472,
            "libraryName": {
              "contractScope": null,
              "id": 7470,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9022,
              "src": "333:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$9022",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "327:27:3",
            "typeName": {
              "id": 7471,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 7474,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7602,
            "src": "360:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8786",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7473,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8786,
              "src": "360:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8786",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7481,
            "members": [
              {
                "constant": false,
                "id": 7476,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7481,
                "src": "410:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7475,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7478,
                "name": "solutionAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7481,
                "src": "433:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7477,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "433:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7480,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7481,
                "src": "466:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7479,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7602,
            "src": "384:100:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7484,
            "name": "solutionsArr",
            "nodeType": "VariableDeclaration",
            "scope": 7602,
            "src": "490:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7482,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7481,
                "src": "490:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7481_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7483,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "490:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7488,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7602,
            "src": "520:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7487,
              "keyType": {
                "id": 7485,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "528:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "520:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7486,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7481,
                "src": "539:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7481_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7492,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7490,
                  "indexed": false,
                  "name": "addedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7492,
                  "src": "585:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:22:3"
            },
            "src": "565:42:3"
          },
          {
            "body": {
              "id": 7532,
              "nodeType": "Block",
              "src": "670:220:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7499,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "680:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7501,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7500,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "690:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "680:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7502,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "solutionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7478,
                      "src": "680:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7503,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7496,
                      "src": "714:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "680:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7505,
                  "nodeType": "ExpressionStatement",
                  "src": "680:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7506,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "728:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7508,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7507,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "738:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "728:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7476,
                      "src": "728:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7510,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7494,
                      "src": "752:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "728:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7512,
                  "nodeType": "ExpressionStatement",
                  "src": "728:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7513,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "767:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7515,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7514,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "777:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "767:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7480,
                      "src": "767:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "792:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "767:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7519,
                  "nodeType": "ExpressionStatement",
                  "src": "767:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7523,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "824:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7525,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7524,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "834:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "824:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7481_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7520,
                        "name": "solutionsArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "806:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "806:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7481_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7527,
                  "nodeType": "ExpressionStatement",
                  "src": "806:34:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7529,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7496,
                        "src": "878:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7528,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "864:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "864:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7531,
                  "nodeType": "EmitStatement",
                  "src": "859:24:3"
                }
              ]
            },
            "documentation": null,
            "id": 7533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7494,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7533,
                  "src": "634:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7533,
                  "src": "649:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "633:29:3"
            },
            "returnParameters": {
              "id": 7498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:3"
            },
            "scope": 7602,
            "src": "613:277:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7600,
              "nodeType": "Block",
              "src": "986:422:3",
              "statements": [
                {
                  "assignments": [
                    7545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7545,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 7600,
                      "src": "996:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7544,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "996:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7548,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7546,
                      "name": "solutionsArr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7484,
                      "src": "1013:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7547,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1013:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "996:36:3"
                },
                {
                  "assignments": [
                    7550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7550,
                      "name": "newIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 7600,
                      "src": "1042:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7549,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7555,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7551,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7545,
                        "src": "1061:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8878,
                      "src": "1061:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:32:3"
                },
                {
                  "body": {
                    "id": 7583,
                    "nodeType": "Block",
                    "src": "1121:175:3",
                    "statements": [
                      {
                        "assignments": [
                          7567
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7567,
                            "name": "current",
                            "nodeType": "VariableDeclaration",
                            "scope": 7583,
                            "src": "1135:23:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7481_memory_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 7566,
                              "name": "Solution",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 7481,
                              "src": "1135:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Solution_$7481_storage_ptr",
                                "typeString": "struct SolnSquareVerifier.Solution"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7571,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7568,
                            "name": "solutionsArr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7484,
                            "src": "1161:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Solution_$7481_storage_$dyn_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                            }
                          },
                          "id": 7570,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7569,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7557,
                            "src": "1174:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1161:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7481_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1135:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 7579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7573,
                                  "name": "current",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7567,
                                  "src": "1198:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7481_memory_ptr",
                                    "typeString": "struct SolnSquareVerifier.Solution memory"
                                  }
                                },
                                "id": 7574,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "solutionAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7478,
                                "src": "1198:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7575,
                                    "name": "solutions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7488,
                                    "src": "1225:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7481_storage_$",
                                      "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                                    }
                                  },
                                  "id": 7577,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 7576,
                                    "name": "addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7535,
                                    "src": "1235:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1225:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Solution_$7481_storage",
                                    "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                  }
                                },
                                "id": 7578,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "solutionAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7478,
                                "src": "1225:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1198:58:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536f6c7574696f6e73206d75737420626520756e69717565",
                              "id": 7580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1258:26:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2b1070ae363df83e4b002df67975ecce210ef0f4f81da145a6f219555a8bbc3e",
                                "typeString": "literal_string \"Solutions must be unique\""
                              },
                              "value": "Solutions must be unique"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2b1070ae363df83e4b002df67975ecce210ef0f4f81da145a6f219555a8bbc3e",
                                "typeString": "literal_string \"Solutions must be unique\""
                              }
                            ],
                            "id": 7572,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9131,
                              9132
                            ],
                            "referencedDeclaration": 9132,
                            "src": "1190:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1190:95:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7582,
                        "nodeType": "ExpressionStatement",
                        "src": "1190:95:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7560,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7557,
                      "src": "1104:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 7561,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "1108:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1104:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7584,
                  "initializationExpression": {
                    "assignments": [
                      7557
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7557,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7584,
                        "src": "1089:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 7559,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1101:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1089:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 7564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1116:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 7563,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7557,
                        "src": "1116:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7565,
                    "nodeType": "ExpressionStatement",
                    "src": "1116:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1085:211:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7588,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7535,
                        "src": "1318:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7589,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7537,
                        "src": "1324:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7590,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7539,
                        "src": "1333:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9183,
                        "src": "1307:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7602",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1136,
                      "src": "1307:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 7591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7592,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7594,
                        "name": "newIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "1364:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7595,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7535,
                        "src": "1374:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7593,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7533,
                      "src": "1352:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7597,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1397:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7543,
                  "id": 7599,
                  "nodeType": "Return",
                  "src": "1390:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7535,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "910:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7537,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "924:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7539,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "941:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:55:3"
            },
            "returnParameters": {
              "id": 7543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7542,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "980:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7541,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:6:3"
            },
            "scope": 7602,
            "src": "896:512:3",
            "stateMutability": "nonpayable",
            "superFunction": 1136,
            "visibility": "public"
          }
        ],
        "scope": 7603,
        "src": "271:1139:3"
      }
    ],
    "src": "0:2081:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA6295fc5cb324f98F9bA9C319C09dD13CC1E047e",
      "transactionHash": "0x8ac9b09492ca47d683d7a5ef0840a880b1330ecd5ba1544d5f31634feed58e16"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-03T00:06:41.282Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}